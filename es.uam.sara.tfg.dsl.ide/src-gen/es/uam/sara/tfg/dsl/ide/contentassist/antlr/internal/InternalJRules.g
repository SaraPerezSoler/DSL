/*
 * generated by Xtext 2.10.0
 */
grammar InternalJRules;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package es.uam.sara.tfg.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package es.uam.sara.tfg.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import es.uam.sara.tfg.dsl.services.JRulesGrammarAccess;

}
@parser::members {
	private JRulesGrammarAccess grammarAccess;

	public void setGrammarAccess(JRulesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRuleSet
entryRuleRuleSet
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleSetAccess().getGroup()); }
		(rule__RuleSet__Group__0)
		{ after(grammarAccess.getRuleSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSatisfy
entryRuleSatisfy
:
{ before(grammarAccess.getSatisfyRule()); }
	 ruleSatisfy
{ after(grammarAccess.getSatisfyRule()); } 
	 EOF 
;

// Rule Satisfy
ruleSatisfy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSatisfyAccess().getAlternatives()); }
		(rule__Satisfy__Alternatives)
		{ after(grammarAccess.getSatisfyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getAlternatives()); }
		(rule__And__Alternatives)
		{ after(grammarAccess.getAndAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleisImplemented
entryRuleisImplemented
:
{ before(grammarAccess.getIsImplementedRule()); }
	 ruleisImplemented
{ after(grammarAccess.getIsImplementedRule()); } 
	 EOF 
;

// Rule isImplemented
ruleisImplemented 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsImplementedAccess().getGroup()); }
		(rule__IsImplemented__Group__0)
		{ after(grammarAccess.getIsImplementedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIsInheritor
entryRuleIsInheritor
:
{ before(grammarAccess.getIsInheritorRule()); }
	 ruleIsInheritor
{ after(grammarAccess.getIsInheritorRule()); } 
	 EOF 
;

// Rule IsInheritor
ruleIsInheritor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsInheritorAccess().getGroup()); }
		(rule__IsInheritor__Group__0)
		{ after(grammarAccess.getIsInheritorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplements
entryRuleImplements
:
{ before(grammarAccess.getImplementsRule()); }
	 ruleImplements
{ after(grammarAccess.getImplementsRule()); } 
	 EOF 
;

// Rule Implements
ruleImplements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementsAccess().getGroup()); }
		(rule__Implements__Group__0)
		{ after(grammarAccess.getImplementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIsExtended
entryRuleIsExtended
:
{ before(grammarAccess.getIsExtendedRule()); }
	 ruleIsExtended
{ after(grammarAccess.getIsExtendedRule()); } 
	 EOF 
;

// Rule IsExtended
ruleIsExtended 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsExtendedAccess().getGroup()); }
		(rule__IsExtended__Group__0)
		{ after(grammarAccess.getIsExtendedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructor
entryRuleConstructor
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorAccess().getGroup()); }
		(rule__Constructor__Group__0)
		{ after(grammarAccess.getConstructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturn
entryRuleReturn
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnAccess().getGroup()); }
		(rule__Return__Group__0)
		{ after(grammarAccess.getReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeType
entryRuleAttributeType
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
		(rule__AttributeType__Group__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialize
entryRuleInitialize
:
{ before(grammarAccess.getInitializeRule()); }
	 ruleInitialize
{ after(grammarAccess.getInitializeRule()); } 
	 EOF 
;

// Rule Initialize
ruleInitialize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializeAccess().getGroup()); }
		(rule__Initialize__Group__0)
		{ after(grammarAccess.getInitializeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNoEmpty
entryRuleNoEmpty
:
{ before(grammarAccess.getNoEmptyRule()); }
	 ruleNoEmpty
{ after(grammarAccess.getNoEmptyRule()); } 
	 EOF 
;

// Rule NoEmpty
ruleNoEmpty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoEmptyAccess().getGroup()); }
		(rule__NoEmpty__Group__0)
		{ after(grammarAccess.getNoEmptyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getGroup()); }
		(rule__Name__Group__0)
		{ after(grammarAccess.getNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJavaDoc
entryRuleJavaDoc
:
{ before(grammarAccess.getJavaDocRule()); }
	 ruleJavaDoc
{ after(grammarAccess.getJavaDocRule()); } 
	 EOF 
;

// Rule JavaDoc
ruleJavaDoc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJavaDocAccess().getGroup()); }
		(rule__JavaDoc__Group__0)
		{ after(grammarAccess.getJavaDocAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContains
entryRuleContains
:
{ before(grammarAccess.getContainsRule()); }
	 ruleContains
{ after(grammarAccess.getContainsRule()); } 
	 EOF 
;

// Rule Contains
ruleContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainsAccess().getGroup()); }
		(rule__Contains__Group__0)
		{ after(grammarAccess.getContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModifiers
entryRuleModifiers
:
{ before(grammarAccess.getModifiersRule()); }
	 ruleModifiers
{ after(grammarAccess.getModifiersRule()); } 
	 EOF 
;

// Rule Modifiers
ruleModifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifiersAccess().getGroup()); }
		(rule__Modifiers__Group__0)
		{ after(grammarAccess.getModifiersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBigInteger
entryRuleEBigInteger
:
{ before(grammarAccess.getEBigIntegerRule()); }
	 ruleEBigInteger
{ after(grammarAccess.getEBigIntegerRule()); } 
	 EOF 
;

// Rule EBigInteger
ruleEBigInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBigIntegerAccess().getGroup()); }
		(rule__EBigInteger__Group__0)
		{ after(grammarAccess.getEBigIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlendModifiers
entryRuleBlendModifiers
:
{ before(grammarAccess.getBlendModifiersRule()); }
	 ruleBlendModifiers
{ after(grammarAccess.getBlendModifiersRule()); } 
	 EOF 
;

// Rule BlendModifiers
ruleBlendModifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAlternatives()); }
		(rule__BlendModifiers__Alternatives)
		{ after(grammarAccess.getBlendModifiersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Quantifier
ruleQuantifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getAlternatives()); }
		(rule__Quantifier__Alternatives)
		{ after(grammarAccess.getQuantifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ElementJava
ruleElementJava
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementJavaAccess().getAlternatives()); }
		(rule__ElementJava__Alternatives)
		{ after(grammarAccess.getElementJavaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NameType
ruleNameType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameTypeAccess().getAlternatives()); }
		(rule__NameType__Alternatives)
		{ after(grammarAccess.getNameTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NameOperator
ruleNameOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameOperatorAccess().getAlternatives()); }
		(rule__NameOperator__Alternatives)
		{ after(grammarAccess.getNameOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Language
ruleLanguage
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getAlternatives()); }
		(rule__Language__Alternatives)
		{ after(grammarAccess.getLanguageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AccessModifier
ruleAccessModifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessModifierAccess().getAlternatives()); }
		(rule__AccessModifier__Alternatives)
		{ after(grammarAccess.getAccessModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Satisfy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSatisfyAccess().getIsImplementedParserRuleCall_0()); }
		ruleisImplemented
		{ after(grammarAccess.getSatisfyAccess().getIsImplementedParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getIsInheritorParserRuleCall_1()); }
		ruleIsInheritor
		{ after(grammarAccess.getSatisfyAccess().getIsInheritorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getImplementsParserRuleCall_2()); }
		ruleImplements
		{ after(grammarAccess.getSatisfyAccess().getImplementsParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getIsExtendedParserRuleCall_3()); }
		ruleIsExtended
		{ after(grammarAccess.getSatisfyAccess().getIsExtendedParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getParameterParserRuleCall_4()); }
		ruleParameter
		{ after(grammarAccess.getSatisfyAccess().getParameterParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getConstructorParserRuleCall_5()); }
		ruleConstructor
		{ after(grammarAccess.getSatisfyAccess().getConstructorParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getReturnParserRuleCall_6()); }
		ruleReturn
		{ after(grammarAccess.getSatisfyAccess().getReturnParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getAttributeTypeParserRuleCall_7()); }
		ruleAttributeType
		{ after(grammarAccess.getSatisfyAccess().getAttributeTypeParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getInitializeParserRuleCall_8()); }
		ruleInitialize
		{ after(grammarAccess.getSatisfyAccess().getInitializeParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getNoEmptyParserRuleCall_9()); }
		ruleNoEmpty
		{ after(grammarAccess.getSatisfyAccess().getNoEmptyParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getNameParserRuleCall_10()); }
		ruleName
		{ after(grammarAccess.getSatisfyAccess().getNameParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getJavaDocParserRuleCall_11()); }
		ruleJavaDoc
		{ after(grammarAccess.getSatisfyAccess().getJavaDocParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getContainsParserRuleCall_12()); }
		ruleContains
		{ after(grammarAccess.getSatisfyAccess().getContainsParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getModifiersParserRuleCall_13()); }
		ruleModifiers
		{ after(grammarAccess.getSatisfyAccess().getModifiersParserRuleCall_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpAssignment_0()); }
		(rule__And__OpAssignment_0)
		{ after(grammarAccess.getAndAccess().getOpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAndAccess().getGroup_1()); }
		(rule__And__Group_1__0)
		{ after(grammarAccess.getAndAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementsAccess().getGroup_2_0()); }
		(rule__Implements__Group_2_0__0)
		{ after(grammarAccess.getImplementsAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getImplementsAccess().getGroup_2_1()); }
		(rule__Implements__Group_2_1__0)
		{ after(grammarAccess.getImplementsAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getGroup_2_0()); }
		(rule__Name__Group_2_0__0)
		{ after(grammarAccess.getNameAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameAccess().getGroup_2_1()); }
		(rule__Name__Group_2_1__0)
		{ after(grammarAccess.getNameAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_0()); }
		(rule__BlendModifiers__Group_0__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_1()); }
		(rule__BlendModifiers__Group_1__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_2()); }
		(rule__BlendModifiers__Group_2__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_3()); }
		(rule__BlendModifiers__Group_3__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_4()); }
		(rule__BlendModifiers__SynchronizedAssignment_4)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_0()); }
		('one')
		{ after(grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_1()); }
		('exists')
		{ after(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_2()); }
		('all')
		{ after(grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJava__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementJavaAccess().getPackageEnumLiteralDeclaration_0()); }
		('Package')
		{ after(grammarAccess.getElementJavaAccess().getPackageEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getClassEnumLiteralDeclaration_1()); }
		('Class')
		{ after(grammarAccess.getElementJavaAccess().getClassEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getInterfaceEnumLiteralDeclaration_2()); }
		('Interface')
		{ after(grammarAccess.getElementJavaAccess().getInterfaceEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getEnumEnumLiteralDeclaration_3()); }
		('Enum')
		{ after(grammarAccess.getElementJavaAccess().getEnumEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getMethodEnumLiteralDeclaration_4()); }
		('Method')
		{ after(grammarAccess.getElementJavaAccess().getMethodEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getAttributeEnumLiteralDeclaration_5()); }
		('Attribute')
		{ after(grammarAccess.getElementJavaAccess().getAttributeEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameTypeAccess().getUpperCaseEnumLiteralDeclaration_0()); }
		('upperCase')
		{ after(grammarAccess.getNameTypeAccess().getUpperCaseEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getLowerCaseEnumLiteralDeclaration_1()); }
		('lowerCase')
		{ after(grammarAccess.getNameTypeAccess().getLowerCaseEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getUpperCamelCaseEnumLiteralDeclaration_2()); }
		('upperCamelCase')
		{ after(grammarAccess.getNameTypeAccess().getUpperCamelCaseEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getLowerCamelCaseEnumLiteralDeclaration_3()); }
		('lowerCamelCase')
		{ after(grammarAccess.getNameTypeAccess().getLowerCamelCaseEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getStartUpperCaseEnumLiteralDeclaration_4()); }
		('startUpperCase')
		{ after(grammarAccess.getNameTypeAccess().getStartUpperCaseEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameOperatorAccess().getLikeEnumLiteralDeclaration_0()); }
		('like')
		{ after(grammarAccess.getNameOperatorAccess().getLikeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameOperatorAccess().getEqualEnumLiteralDeclaration_1()); }
		('equal')
		{ after(grammarAccess.getNameOperatorAccess().getEqualEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNameOperatorAccess().getEndsEnumLiteralDeclaration_2()); }
		('ends')
		{ after(grammarAccess.getNameOperatorAccess().getEndsEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNameOperatorAccess().getStartEnumLiteralDeclaration_3()); }
		('start')
		{ after(grammarAccess.getNameOperatorAccess().getStartEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNameOperatorAccess().getContainsEnumLiteralDeclaration_4()); }
		('contains')
		{ after(grammarAccess.getNameOperatorAccess().getContainsEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_0()); }
		('English')
		{ after(grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLanguageAccess().getESPANIOLEnumLiteralDeclaration_1()); }
		('Spanish')
		{ after(grammarAccess.getLanguageAccess().getESPANIOLEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessModifierAccess().getDefaultEnumLiteralDeclaration_0()); }
		('Default')
		{ after(grammarAccess.getAccessModifierAccess().getDefaultEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAccessModifierAccess().getPublicEnumLiteralDeclaration_1()); }
		('Public')
		{ after(grammarAccess.getAccessModifierAccess().getPublicEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAccessModifierAccess().getProtectedEnumLiteralDeclaration_2()); }
		('Protected')
		{ after(grammarAccess.getAccessModifierAccess().getProtectedEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAccessModifierAccess().getPrivateEnumLiteralDeclaration_3()); }
		('Private')
		{ after(grammarAccess.getAccessModifierAccess().getPrivateEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getProjectNameKeyword_0()); }
	'ProjectName:'
	{ after(grammarAccess.getRuleSetAccess().getProjectNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getProjectNameAssignment_1()); }
	(rule__RuleSet__ProjectNameAssignment_1)
	{ after(grammarAccess.getRuleSetAccess().getProjectNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__2__Impl
	rule__RuleSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulesAssignment_2()); }
	(rule__RuleSet__RulesAssignment_2)
	{ after(grammarAccess.getRuleSetAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__3__Impl
	rule__RuleSet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getRuleSetAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getGroup_4()); }
	(rule__RuleSet__Group_4__0)*
	{ after(grammarAccess.getRuleSetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_4__0__Impl
	rule__RuleSet__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulesAssignment_4_0()); }
	(rule__RuleSet__RulesAssignment_4_0)
	{ after(grammarAccess.getRuleSetAccess().getRulesAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getRuleSetAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNoAssignment_0()); }
	(rule__Rule__NoAssignment_0)?
	{ after(grammarAccess.getRuleAccess().getNoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getQuantifierAssignment_1()); }
	(rule__Rule__QuantifierAssignment_1)
	{ after(grammarAccess.getRuleAccess().getQuantifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getElementAssignment_2()); }
	(rule__Rule__ElementAssignment_2)
	{ after(grammarAccess.getRuleAccess().getElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_3()); }
	(rule__Rule__Group_3__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSatisfyKeyword_4()); }
	'satisfy'
	{ after(grammarAccess.getRuleAccess().getSatisfyKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSatisfyAssignment_5()); }
	(rule__Rule__SatisfyAssignment_5)
	{ after(grammarAccess.getRuleAccess().getSatisfyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_3__0__Impl
	rule__Rule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getWhichKeyword_3_0()); }
	'which'
	{ after(grammarAccess.getRuleAccess().getWhichKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getFilterAssignment_3_1()); }
	(rule__Rule__FilterAssignment_3_1)
	{ after(grammarAccess.getRuleAccess().getFilterAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getNoAssignment_0()); }
	(rule__Filter__NoAssignment_0)?
	{ after(grammarAccess.getFilterAccess().getNoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getFilterAssignment_1()); }
	(rule__Filter__FilterAssignment_1)
	{ after(grammarAccess.getFilterAccess().getFilterAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOpAssignment_0()); }
	(rule__Or__OpAssignment_0)
	{ after(grammarAccess.getOrAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1_0()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
	(rule__Or__OpAssignment_1_1)
	{ after(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getAndAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
	(rule__And__OpAssignment_1_1)
	{ after(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
	rule__And__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_2()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__3__Impl
	rule__And__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_1_3()); }
	(rule__And__OpAssignment_1_3)
	{ after(grammarAccess.getAndAccess().getOpAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__4__Impl
	rule__And__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1_4()); }
	(rule__And__Group_1_4__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightParenthesisKeyword_1_5()); }
	')'
	{ after(grammarAccess.getAndAccess().getRightParenthesisKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1_4__0__Impl
	rule__And__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_4_0()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_1_4_1()); }
	(rule__And__OpAssignment_1_4_1)
	{ after(grammarAccess.getAndAccess().getOpAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsImplemented__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsImplemented__Group__0__Impl
	rule__IsImplemented__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsImplemented__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsImplementedAccess().getIsImplementedAction_0()); }
	()
	{ after(grammarAccess.getIsImplementedAccess().getIsImplementedAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsImplemented__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsImplemented__Group__1__Impl
	rule__IsImplemented__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsImplemented__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsImplementedAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getIsImplementedAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsImplemented__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsImplemented__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsImplemented__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsImplementedAccess().getImplementedKeyword_2()); }
	'implemented'
	{ after(grammarAccess.getIsImplementedAccess().getImplementedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsInheritor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group__0__Impl
	rule__IsInheritor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getIsInheritorAction_0()); }
	()
	{ after(grammarAccess.getIsInheritorAccess().getIsInheritorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group__1__Impl
	rule__IsInheritor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getIsInheritorAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getInheritorKeyword_2()); }
	'inheritor'
	{ after(grammarAccess.getIsInheritorAccess().getInheritorKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__0__Impl
	rule__Implements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getImplementsAction_0()); }
	()
	{ after(grammarAccess.getImplementsAccess().getImplementsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__1__Impl
	rule__Implements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getImplementsKeyword_1()); }
	'implements'
	{ after(grammarAccess.getImplementsAccess().getImplementsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__2__Impl
	rule__Implements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getAlternatives_2()); }
	(rule__Implements__Alternatives_2)?
	{ after(grammarAccess.getImplementsAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getInterfacesKeyword_3()); }
	'interfaces'
	{ after(grammarAccess.getImplementsAccess().getInterfacesKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_0__0__Impl
	rule__Implements__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMinKeyword_2_0_0()); }
	'min='
	{ after(grammarAccess.getImplementsAccess().getMinKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_0__1__Impl
	rule__Implements__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMinInterfaceAssignment_2_0_1()); }
	(rule__Implements__MinInterfaceAssignment_2_0_1)
	{ after(grammarAccess.getImplementsAccess().getMinInterfaceAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getGroup_2_0_2()); }
	(rule__Implements__Group_2_0_2__0)?
	{ after(grammarAccess.getImplementsAccess().getGroup_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group_2_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_0_2__0__Impl
	rule__Implements__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getAndKeyword_2_0_2_0()); }
	'and'
	{ after(grammarAccess.getImplementsAccess().getAndKeyword_2_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_0_2__1__Impl
	rule__Implements__Group_2_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMaxKeyword_2_0_2_1()); }
	'max='
	{ after(grammarAccess.getImplementsAccess().getMaxKeyword_2_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMaxInterfaceAssignment_2_0_2_2()); }
	(rule__Implements__MaxInterfaceAssignment_2_0_2_2)
	{ after(grammarAccess.getImplementsAccess().getMaxInterfaceAssignment_2_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_1__0__Impl
	rule__Implements__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMaxKeyword_2_1_0()); }
	'max='
	{ after(grammarAccess.getImplementsAccess().getMaxKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_1__1__Impl
	rule__Implements__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMaxInterfaceAssignment_2_1_1()); }
	(rule__Implements__MaxInterfaceAssignment_2_1_1)
	{ after(grammarAccess.getImplementsAccess().getMaxInterfaceAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getGroup_2_1_2()); }
	(rule__Implements__Group_2_1_2__0)?
	{ after(grammarAccess.getImplementsAccess().getGroup_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_1_2__0__Impl
	rule__Implements__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getAndKeyword_2_1_2_0()); }
	'and'
	{ after(grammarAccess.getImplementsAccess().getAndKeyword_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_1_2__1__Impl
	rule__Implements__Group_2_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMinKeyword_2_1_2_1()); }
	'min='
	{ after(grammarAccess.getImplementsAccess().getMinKeyword_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMinInterfaceAssignment_2_1_2_2()); }
	(rule__Implements__MinInterfaceAssignment_2_1_2_2)
	{ after(grammarAccess.getImplementsAccess().getMinInterfaceAssignment_2_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsExtended__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsExtended__Group__0__Impl
	rule__IsExtended__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExtended__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsExtendedAccess().getIsExtendedAction_0()); }
	()
	{ after(grammarAccess.getIsExtendedAccess().getIsExtendedAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExtended__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsExtended__Group__1__Impl
	rule__IsExtended__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExtended__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsExtendedAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getIsExtendedAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExtended__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsExtended__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExtended__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsExtendedAccess().getExtendedKeyword_2()); }
	'extended'
	{ after(grammarAccess.getIsExtendedAccess().getExtendedKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNumParametersKeyword_0()); }
	'numParameters='
	{ after(grammarAccess.getParameterAccess().getNumParametersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNumParamAssignment_1()); }
	(rule__Parameter__NumParamAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNumParamAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_2()); }
	(rule__Parameter__Group_2__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__0__Impl
	rule__Parameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getAndKeyword_2_0()); }
	'and'
	{ after(grammarAccess.getParameterAccess().getAndKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__1__Impl
	rule__Parameter__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypesKeyword_2_1()); }
	'types='
	{ after(grammarAccess.getParameterAccess().getTypesKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__2__Impl
	rule__Parameter__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2()); }
	'['
	{ after(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__3__Impl
	rule__Parameter__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypesParamAssignment_2_3()); }
	(rule__Parameter__TypesParamAssignment_2_3)
	{ after(grammarAccess.getParameterAccess().getTypesParamAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__4__Impl
	rule__Parameter__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_2_4()); }
	(rule__Parameter__Group_2_4__0)*
	{ after(grammarAccess.getParameterAccess().getGroup_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_5()); }
	']'
	{ after(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2_4__0__Impl
	rule__Parameter__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getCommaKeyword_2_4_0()); }
	','
	{ after(grammarAccess.getParameterAccess().getCommaKeyword_2_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypesParamAssignment_2_4_1()); }
	(rule__Parameter__TypesParamAssignment_2_4_1)
	{ after(grammarAccess.getParameterAccess().getTypesParamAssignment_2_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getConstructorAction_0()); }
	()
	{ after(grammarAccess.getConstructorAccess().getConstructorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__1__Impl
	rule__Constructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getConstructorAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getConstructorKeyword_2()); }
	'constructor'
	{ after(grammarAccess.getConstructorAccess().getConstructorKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__0__Impl
	rule__Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__1__Impl
	rule__Return__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getTypeKeyword_1()); }
	'type='
	{ after(grammarAccess.getReturnAccess().getTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getReturnTypeAssignment_2()); }
	(rule__Return__ReturnTypeAssignment_2)
	{ after(grammarAccess.getReturnAccess().getReturnTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__0__Impl
	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getTypeKeyword_0()); }
	'type='
	{ after(grammarAccess.getAttributeTypeAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getTypeAssignment_1()); }
	(rule__AttributeType__TypeAssignment_1)
	{ after(grammarAccess.getAttributeTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initialize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__0__Impl
	rule__Initialize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitializeAction_0()); }
	()
	{ after(grammarAccess.getInitializeAccess().getInitializeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__1__Impl
	rule__Initialize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getInitializeAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitializeKeyword_2()); }
	'initialize'
	{ after(grammarAccess.getInitializeAccess().getInitializeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NoEmpty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoEmpty__Group__0__Impl
	rule__NoEmpty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoEmptyAccess().getNoEmptyAction_0()); }
	()
	{ after(grammarAccess.getNoEmptyAccess().getNoEmptyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoEmpty__Group__1__Impl
	rule__NoEmpty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoEmptyAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getNoEmptyAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoEmpty__Group__2__Impl
	rule__NoEmpty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoEmptyAccess().getNotKeyword_2()); }
	'not'
	{ after(grammarAccess.getNoEmptyAccess().getNotKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoEmpty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoEmptyAccess().getEmptyKeyword_3()); }
	'empty'
	{ after(grammarAccess.getNoEmptyAccess().getEmptyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAction_0()); }
	()
	{ after(grammarAccess.getNameAccess().getNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__1__Impl
	rule__Name__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameKeyword_1()); }
	'name'
	{ after(grammarAccess.getNameAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getAlternatives_2()); }
	(rule__Name__Alternatives_2)
	{ after(grammarAccess.getNameAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0__0__Impl
	rule__Name__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeKeyword_2_0_0()); }
	'type='
	{ after(grammarAccess.getNameAccess().getTypeKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0__1__Impl
	rule__Name__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeAssignment_2_0_1()); }
	(rule__Name__TypeAssignment_2_0_1)
	{ after(grammarAccess.getNameAccess().getTypeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_2_0_2()); }
	(rule__Name__Group_2_0_2__0)?
	{ after(grammarAccess.getNameAccess().getGroup_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2__0__Impl
	rule__Name__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_2_0_2_0()); }
	(rule__Name__Group_2_0_2_0__0)
	{ after(grammarAccess.getNameAccess().getGroup_2_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_2_0_2_1()); }
	(rule__Name__Group_2_0_2_1__0)?
	{ after(grammarAccess.getNameAccess().getGroup_2_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_0_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2_0__0__Impl
	rule__Name__Group_2_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getAndKeyword_2_0_2_0_0()); }
	'and'
	{ after(grammarAccess.getNameAccess().getAndKeyword_2_0_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2_0__1__Impl
	rule__Name__Group_2_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getOperatorAssignment_2_0_2_0_1()); }
	(rule__Name__OperatorAssignment_2_0_2_0_1)
	{ after(grammarAccess.getNameAccess().getOperatorAssignment_2_0_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAssignment_2_0_2_0_2()); }
	(rule__Name__NameAssignment_2_0_2_0_2)
	{ after(grammarAccess.getNameAccess().getNameAssignment_2_0_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2_1__0__Impl
	rule__Name__Group_2_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getCommaKeyword_2_0_2_1_0()); }
	','
	{ after(grammarAccess.getNameAccess().getCommaKeyword_2_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getLanguageAssignment_2_0_2_1_1()); }
	(rule__Name__LanguageAssignment_2_0_2_1_1)
	{ after(grammarAccess.getNameAccess().getLanguageAssignment_2_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1__0__Impl
	rule__Name__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getOperatorAssignment_2_1_0()); }
	(rule__Name__OperatorAssignment_2_1_0)
	{ after(grammarAccess.getNameAccess().getOperatorAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1__1__Impl
	rule__Name__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAssignment_2_1_1()); }
	(rule__Name__NameAssignment_2_1_1)
	{ after(grammarAccess.getNameAccess().getNameAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1__2__Impl
	rule__Name__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_2_1_2()); }
	(rule__Name__Group_2_1_2__0)?
	{ after(grammarAccess.getNameAccess().getGroup_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_2_1_3()); }
	(rule__Name__Group_2_1_3__0)?
	{ after(grammarAccess.getNameAccess().getGroup_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1_2__0__Impl
	rule__Name__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getCommaKeyword_2_1_2_0()); }
	','
	{ after(grammarAccess.getNameAccess().getCommaKeyword_2_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getLanguageAssignment_2_1_2_1()); }
	(rule__Name__LanguageAssignment_2_1_2_1)
	{ after(grammarAccess.getNameAccess().getLanguageAssignment_2_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_2_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1_3__0__Impl
	rule__Name__Group_2_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getAndKeyword_2_1_3_0()); }
	'and'
	{ after(grammarAccess.getNameAccess().getAndKeyword_2_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1_3__1__Impl
	rule__Name__Group_2_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeKeyword_2_1_3_1()); }
	'type='
	{ after(grammarAccess.getNameAccess().getTypeKeyword_2_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_2_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_2_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeAssignment_2_1_3_2()); }
	(rule__Name__TypeAssignment_2_1_3_2)
	{ after(grammarAccess.getNameAccess().getTypeAssignment_2_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaDoc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__0__Impl
	rule__JavaDoc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getJavaDocAction_0()); }
	()
	{ after(grammarAccess.getJavaDocAccess().getJavaDocAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__1__Impl
	rule__JavaDoc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getJavaDocKeyword_1()); }
	'JavaDoc'
	{ after(grammarAccess.getJavaDocAccess().getJavaDocKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__2__Impl
	rule__JavaDoc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getAuthorAssignment_2()); }
	(rule__JavaDoc__AuthorAssignment_2)?
	{ after(grammarAccess.getJavaDocAccess().getAuthorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__3__Impl
	rule__JavaDoc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getParameterAssignment_3()); }
	(rule__JavaDoc__ParameterAssignment_3)?
	{ after(grammarAccess.getJavaDocAccess().getParameterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__4__Impl
	rule__JavaDoc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getReturnAssignment_4()); }
	(rule__JavaDoc__ReturnAssignment_4)?
	{ after(grammarAccess.getJavaDocAccess().getReturnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__5__Impl
	rule__JavaDoc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getVersionAssignment_5()); }
	(rule__JavaDoc__VersionAssignment_5)?
	{ after(grammarAccess.getJavaDocAccess().getVersionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__6__Impl
	rule__JavaDoc__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getThrowsAssignment_6()); }
	(rule__JavaDoc__ThrowsAssignment_6)?
	{ after(grammarAccess.getJavaDocAccess().getThrowsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getSeeAssignment_7()); }
	(rule__JavaDoc__SeeAssignment_7)?
	{ after(grammarAccess.getJavaDocAccess().getSeeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__0__Impl
	rule__Contains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getHaveKeyword_0()); }
	'have'
	{ after(grammarAccess.getContainsAccess().getHaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__1__Impl
	rule__Contains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getContainsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__2__Impl
	rule__Contains__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getWhichAssignment_2()); }
	(rule__Contains__WhichAssignment_2)
	{ after(grammarAccess.getContainsAccess().getWhichAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getContainsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifiers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__0__Impl
	rule__Modifiers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getModifiersKeyword_0()); }
	'modifiers:'
	{ after(grammarAccess.getModifiersAccess().getModifiersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__1__Impl
	rule__Modifiers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getModifiersAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__2__Impl
	rule__Modifiers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__3__Impl
	rule__Modifiers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getBlendAssignment_3()); }
	(rule__Modifiers__BlendAssignment_3)
	{ after(grammarAccess.getModifiersAccess().getBlendAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__4__Impl
	rule__Modifiers__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__5__Impl
	rule__Modifiers__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getGroup_5()); }
	(rule__Modifiers__Group_5__0)*
	{ after(grammarAccess.getModifiersAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getModifiersAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifiers__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_5__0__Impl
	rule__Modifiers__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getOrKeyword_5_0()); }
	'or'
	{ after(grammarAccess.getModifiersAccess().getOrKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_5__1__Impl
	rule__Modifiers__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_5__2__Impl
	rule__Modifiers__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getBlendAssignment_5_2()); }
	(rule__Modifiers__BlendAssignment_5_2)
	{ after(grammarAccess.getModifiersAccess().getBlendAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBigInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBigInteger__Group__0__Impl
	rule__EBigInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBigInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBigIntegerAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEBigIntegerAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBigInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBigInteger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBigInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBigIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEBigIntegerAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__0__Impl
	rule__BlendModifiers__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAccessAssignment_0_0()); }
	(rule__BlendModifiers__AccessAssignment_0_0)
	{ after(grammarAccess.getBlendModifiersAccess().getAccessAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__1__Impl
	rule__BlendModifiers__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_0_1()); }
	(rule__BlendModifiers__Group_0_1__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__2__Impl
	rule__BlendModifiers__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_0_2()); }
	(rule__BlendModifiers__Group_0_2__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__3__Impl
	rule__BlendModifiers__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_0_3()); }
	(rule__BlendModifiers__Group_0_3__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_0_4()); }
	(rule__BlendModifiers__Group_0_4__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_1__0__Impl
	rule__BlendModifiers__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_1_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getStaticAssignment_0_1_1()); }
	(rule__BlendModifiers__StaticAssignment_0_1_1)
	{ after(grammarAccess.getBlendModifiersAccess().getStaticAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_2__0__Impl
	rule__BlendModifiers__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_2_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getFinalAssignment_0_2_1()); }
	(rule__BlendModifiers__FinalAssignment_0_2_1)
	{ after(grammarAccess.getBlendModifiersAccess().getFinalAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_3__0__Impl
	rule__BlendModifiers__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_3_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_0_3_1()); }
	(rule__BlendModifiers__AbstractAssignment_0_3_1)
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_4__0__Impl
	rule__BlendModifiers__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_4_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_0_4_1()); }
	(rule__BlendModifiers__SynchronizedAssignment_0_4_1)
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__0__Impl
	rule__BlendModifiers__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getStaticAssignment_1_0()); }
	(rule__BlendModifiers__StaticAssignment_1_0)
	{ after(grammarAccess.getBlendModifiersAccess().getStaticAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__1__Impl
	rule__BlendModifiers__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_1_1()); }
	(rule__BlendModifiers__Group_1_1__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__2__Impl
	rule__BlendModifiers__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_1_2()); }
	(rule__BlendModifiers__Group_1_2__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_1_3()); }
	(rule__BlendModifiers__Group_1_3__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1_1__0__Impl
	rule__BlendModifiers__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_1_1_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getFinalAssignment_1_1_1()); }
	(rule__BlendModifiers__FinalAssignment_1_1_1)
	{ after(grammarAccess.getBlendModifiersAccess().getFinalAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1_2__0__Impl
	rule__BlendModifiers__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_1_2_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_1_2_1()); }
	(rule__BlendModifiers__AbstractAssignment_1_2_1)
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1_3__0__Impl
	rule__BlendModifiers__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_1_3_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_1_3_1()); }
	(rule__BlendModifiers__SynchronizedAssignment_1_3_1)
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2__0__Impl
	rule__BlendModifiers__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getFinalAssignment_2_0()); }
	(rule__BlendModifiers__FinalAssignment_2_0)
	{ after(grammarAccess.getBlendModifiersAccess().getFinalAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2__1__Impl
	rule__BlendModifiers__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_2_1()); }
	(rule__BlendModifiers__Group_2_1__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_2_2()); }
	(rule__BlendModifiers__Group_2_2__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2_1__0__Impl
	rule__BlendModifiers__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_2_1_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_2_1_1()); }
	(rule__BlendModifiers__AbstractAssignment_2_1_1)
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2_2__0__Impl
	rule__BlendModifiers__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_2_2_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_2_2_1()); }
	(rule__BlendModifiers__SynchronizedAssignment_2_2_1)
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_3__0__Impl
	rule__BlendModifiers__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_3_0()); }
	(rule__BlendModifiers__AbstractAssignment_3_0)
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getGroup_3_1()); }
	(rule__BlendModifiers__Group_3_1__0)?
	{ after(grammarAccess.getBlendModifiersAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_3_1__0__Impl
	rule__BlendModifiers__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAndKeyword_3_1_0()); }
	'and'
	{ after(grammarAccess.getBlendModifiersAccess().getAndKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_3_1_1()); }
	(rule__BlendModifiers__SynchronizedAssignment_3_1_1)
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__ProjectNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getProjectNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getRuleSetAccess().getProjectNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_4_0_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNoNoKeyword_0_0()); }
		(
			{ before(grammarAccess.getRuleAccess().getNoNoKeyword_0_0()); }
			'no'
			{ after(grammarAccess.getRuleAccess().getNoNoKeyword_0_0()); }
		)
		{ after(grammarAccess.getRuleAccess().getNoNoKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__QuantifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
		ruleQuantifier
		{ after(grammarAccess.getRuleAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getElementElementJavaEnumRuleCall_2_0()); }
		ruleElementJava
		{ after(grammarAccess.getRuleAccess().getElementElementJavaEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__FilterAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getFilterFilterParserRuleCall_3_1_0()); }
		ruleFilter
		{ after(grammarAccess.getRuleAccess().getFilterFilterParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__SatisfyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getSatisfyOrParserRuleCall_5_0()); }
		ruleOr
		{ after(grammarAccess.getRuleAccess().getSatisfyOrParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__NoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getNoNoKeyword_0_0()); }
		(
			{ before(grammarAccess.getFilterAccess().getNoNoKeyword_0_0()); }
			'no'
			{ after(grammarAccess.getFilterAccess().getNoNoKeyword_0_0()); }
		)
		{ after(grammarAccess.getFilterAccess().getNoNoKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__FilterAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getFilterOrParserRuleCall_1_0()); }
		ruleOr
		{ after(grammarAccess.getFilterAccess().getFilterOrParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpAndParserRuleCall_0_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getOpAndParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_1_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_0_0()); }
		ruleSatisfy
		{ after(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_1_0()); }
		ruleSatisfy
		{ after(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_3_0()); }
		ruleSatisfy
		{ after(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_4_1_0()); }
		ruleSatisfy
		{ after(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__MinInterfaceAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementsAccess().getMinInterfaceEIntParserRuleCall_2_0_1_0()); }
		ruleEInt
		{ after(grammarAccess.getImplementsAccess().getMinInterfaceEIntParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__MaxInterfaceAssignment_2_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementsAccess().getMaxInterfaceEIntParserRuleCall_2_0_2_2_0()); }
		ruleEInt
		{ after(grammarAccess.getImplementsAccess().getMaxInterfaceEIntParserRuleCall_2_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__MaxInterfaceAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementsAccess().getMaxInterfaceEIntParserRuleCall_2_1_1_0()); }
		ruleEInt
		{ after(grammarAccess.getImplementsAccess().getMaxInterfaceEIntParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__MinInterfaceAssignment_2_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementsAccess().getMinInterfaceEIntParserRuleCall_2_1_2_2_0()); }
		ruleEInt
		{ after(grammarAccess.getImplementsAccess().getMinInterfaceEIntParserRuleCall_2_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NumParamAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNumParamEBigIntegerParserRuleCall_1_0()); }
		ruleEBigInteger
		{ after(grammarAccess.getParameterAccess().getNumParamEBigIntegerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypesParamAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypesParamEStringParserRuleCall_2_3_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getTypesParamEStringParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypesParamAssignment_2_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypesParamEStringParserRuleCall_2_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getTypesParamEStringParserRuleCall_2_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__ReturnTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnAccess().getReturnTypeEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getReturnAccess().getReturnTypeEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getTypeEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeTypeAccess().getTypeEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__TypeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_2_0_1_0()); }
		ruleNameType
		{ after(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__OperatorAssignment_2_0_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_2_0_2_0_1_0()); }
		ruleNameOperator
		{ after(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_2_0_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_2_0_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameEStringParserRuleCall_2_0_2_0_2_0()); }
		ruleEString
		{ after(grammarAccess.getNameAccess().getNameEStringParserRuleCall_2_0_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__LanguageAssignment_2_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_2_0_2_1_1_0()); }
		ruleLanguage
		{ after(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_2_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__OperatorAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_2_1_0_0()); }
		ruleNameOperator
		{ after(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameEStringParserRuleCall_2_1_1_0()); }
		ruleEString
		{ after(grammarAccess.getNameAccess().getNameEStringParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__LanguageAssignment_2_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_2_1_2_1_0()); }
		ruleLanguage
		{ after(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_2_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__TypeAssignment_2_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_2_1_3_2_0()); }
		ruleNameType
		{ after(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_2_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__AuthorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
			'@author'
			{ after(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__ParameterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getParameterParameterKeyword_3_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getParameterParameterKeyword_3_0()); }
			'@parameter'
			{ after(grammarAccess.getJavaDocAccess().getParameterParameterKeyword_3_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getParameterParameterKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__ReturnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
			'@return'
			{ after(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__VersionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
			'@version'
			{ after(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__ThrowsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
			'@throws'
			{ after(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__SeeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
			'@see'
			{ after(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__WhichAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getWhichRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getContainsAccess().getWhichRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__BlendAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_3_0()); }
		ruleBlendModifiers
		{ after(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__BlendAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_5_2_0()); }
		ruleBlendModifiers
		{ after(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AccessAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAccessAccessModifierEnumRuleCall_0_0_0()); }
		ruleAccessModifier
		{ after(grammarAccess.getBlendModifiersAccess().getAccessAccessModifierEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__StaticAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_0_1_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_0_1_1_0()); }
			'static'
			{ after(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_0_1_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__FinalAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_0_2_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_0_2_1_0()); }
			'final'
			{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_0_2_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_0_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_0_3_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_0_3_1_0()); }
			'abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_0_3_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_0_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_0_4_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_0_4_1_0()); }
			'synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_0_4_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__StaticAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
			'static'
			{ after(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__FinalAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_1_1_1_0()); }
			'final'
			{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_1_2_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_1_2_1_0()); }
			'abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_1_2_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_1_3_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_1_3_1_0()); }
			'synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_1_3_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__FinalAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
			'final'
			{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_2_1_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_2_1_1_0()); }
			'abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_2_1_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_2_2_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_2_2_1_0()); }
			'synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_2_2_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
			'abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_3_1_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_3_1_1_0()); }
			'synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_3_1_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
			'synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
