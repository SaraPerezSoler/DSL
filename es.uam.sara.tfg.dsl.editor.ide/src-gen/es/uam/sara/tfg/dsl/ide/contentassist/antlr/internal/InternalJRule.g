/*
 * generated by Xtext 2.9.2
 */
grammar InternalJRule;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package es.uam.sara.tfg.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package es.uam.sara.tfg.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import es.uam.sara.tfg.dsl.services.JRuleGrammarAccess;

}
@parser::members {
	private JRuleGrammarAccess grammarAccess;

	public void setGrammarAccess(JRuleGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleRuleSet
entryRuleRuleSet
:
{ before(grammarAccess.getRuleSetRule()); }
	 ruleRuleSet
{ after(grammarAccess.getRuleSetRule()); } 
	 EOF 
;

// Rule RuleSet
ruleRuleSet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleSetAccess().getGroup()); }
		(rule__RuleSet__Group__0)
		{ after(grammarAccess.getRuleSetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTesting
entryRuleTesting
:
{ before(grammarAccess.getTestingRule()); }
	 ruleTesting
{ after(grammarAccess.getTestingRule()); } 
	 EOF 
;

// Rule Testing
ruleTesting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestingAccess().getGroup()); }
		(rule__Testing__Group__0)
		{ after(grammarAccess.getTestingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getAlternatives()); }
		(rule__Or__Alternatives)
		{ after(grammarAccess.getOrAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSatisfy
entryRuleSatisfy
:
{ before(grammarAccess.getSatisfyRule()); }
	 ruleSatisfy
{ after(grammarAccess.getSatisfyRule()); } 
	 EOF 
;

// Rule Satisfy
ruleSatisfy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSatisfyAccess().getAlternatives()); }
		(rule__Satisfy__Alternatives)
		{ after(grammarAccess.getSatisfyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIsInheritor
entryRuleIsInheritor
:
{ before(grammarAccess.getIsInheritorRule()); }
	 ruleIsInheritor
{ after(grammarAccess.getIsInheritorRule()); } 
	 EOF 
;

// Rule IsInheritor
ruleIsInheritor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsInheritorAccess().getGroup()); }
		(rule__IsInheritor__Group__0)
		{ after(grammarAccess.getIsInheritorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplements
entryRuleImplements
:
{ before(grammarAccess.getImplementsRule()); }
	 ruleImplements
{ after(grammarAccess.getImplementsRule()); } 
	 EOF 
;

// Rule Implements
ruleImplements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplementsAccess().getGroup()); }
		(rule__Implements__Group__0)
		{ after(grammarAccess.getImplementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIsExtended
entryRuleIsExtended
:
{ before(grammarAccess.getIsExtendedRule()); }
	 ruleIsExtended
{ after(grammarAccess.getIsExtendedRule()); } 
	 EOF 
;

// Rule IsExtended
ruleIsExtended 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIsExtendedAccess().getIsExtendsAssignment()); }
		(rule__IsExtended__IsExtendsAssignment)
		{ after(grammarAccess.getIsExtendedAccess().getIsExtendsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHaveConstant
entryRuleHaveConstant
:
{ before(grammarAccess.getHaveConstantRule()); }
	 ruleHaveConstant
{ after(grammarAccess.getHaveConstantRule()); } 
	 EOF 
;

// Rule HaveConstant
ruleHaveConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHaveConstantAccess().getGroup()); }
		(rule__HaveConstant__Group__0)
		{ after(grammarAccess.getHaveConstantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParametre
entryRuleParametre
:
{ before(grammarAccess.getParametreRule()); }
	 ruleParametre
{ after(grammarAccess.getParametreRule()); } 
	 EOF 
;

// Rule Parametre
ruleParametre 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametreAccess().getGroup()); }
		(rule__Parametre__Group__0)
		{ after(grammarAccess.getParametreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructor
entryRuleConstructor
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorAccess().getGroup()); }
		(rule__Constructor__Group__0)
		{ after(grammarAccess.getConstructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturn
entryRuleReturn
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnAccess().getGroup()); }
		(rule__Return__Group__0)
		{ after(grammarAccess.getReturnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeType
entryRuleAttributeType
:
{ before(grammarAccess.getAttributeTypeRule()); }
	 ruleAttributeType
{ after(grammarAccess.getAttributeTypeRule()); } 
	 EOF 
;

// Rule AttributeType
ruleAttributeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getGroup()); }
		(rule__AttributeType__Group__0)
		{ after(grammarAccess.getAttributeTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialize
entryRuleInitialize
:
{ before(grammarAccess.getInitializeRule()); }
	 ruleInitialize
{ after(grammarAccess.getInitializeRule()); } 
	 EOF 
;

// Rule Initialize
ruleInitialize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializeAccess().getGroup()); }
		(rule__Initialize__Group__0)
		{ after(grammarAccess.getInitializeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNoEmpty
entryRuleNoEmpty
:
{ before(grammarAccess.getNoEmptyRule()); }
	 ruleNoEmpty
{ after(grammarAccess.getNoEmptyRule()); } 
	 EOF 
;

// Rule NoEmpty
ruleNoEmpty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoEmptyAccess().getGroup()); }
		(rule__NoEmpty__Group__0)
		{ after(grammarAccess.getNoEmptyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getAlternatives()); }
		(rule__Name__Alternatives)
		{ after(grammarAccess.getNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJavaDoc
entryRuleJavaDoc
:
{ before(grammarAccess.getJavaDocRule()); }
	 ruleJavaDoc
{ after(grammarAccess.getJavaDocRule()); } 
	 EOF 
;

// Rule JavaDoc
ruleJavaDoc 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJavaDocAccess().getGroup()); }
		(rule__JavaDoc__Group__0)
		{ after(grammarAccess.getJavaDocAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConteins
entryRuleConteins
:
{ before(grammarAccess.getConteinsRule()); }
	 ruleConteins
{ after(grammarAccess.getConteinsRule()); } 
	 EOF 
;

// Rule Conteins
ruleConteins 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConteinsAccess().getGroup()); }
		(rule__Conteins__Group__0)
		{ after(grammarAccess.getConteinsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModifiers
entryRuleModifiers
:
{ before(grammarAccess.getModifiersRule()); }
	 ruleModifiers
{ after(grammarAccess.getModifiersRule()); } 
	 EOF 
;

// Rule Modifiers
ruleModifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifiersAccess().getGroup()); }
		(rule__Modifiers__Group__0)
		{ after(grammarAccess.getModifiersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlendModifiers
entryRuleBlendModifiers
:
{ before(grammarAccess.getBlendModifiersRule()); }
	 ruleBlendModifiers
{ after(grammarAccess.getBlendModifiersRule()); } 
	 EOF 
;

// Rule BlendModifiers
ruleBlendModifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAlternatives()); }
		(rule__BlendModifiers__Alternatives)
		{ after(grammarAccess.getBlendModifiersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBigInteger
entryRuleEBigInteger
:
{ before(grammarAccess.getEBigIntegerRule()); }
	 ruleEBigInteger
{ after(grammarAccess.getEBigIntegerRule()); } 
	 EOF 
;

// Rule EBigInteger
ruleEBigInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBigIntegerAccess().getGroup()); }
		(rule__EBigInteger__Group__0)
		{ after(grammarAccess.getEBigIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Action
ruleAction
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Quantifier
ruleQuantifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getAlternatives()); }
		(rule__Quantifier__Alternatives)
		{ after(grammarAccess.getQuantifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ElementJava
ruleElementJava
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementJavaAccess().getAlternatives()); }
		(rule__ElementJava__Alternatives)
		{ after(grammarAccess.getElementJavaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NameType
ruleNameType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameTypeAccess().getAlternatives()); }
		(rule__NameType__Alternatives)
		{ after(grammarAccess.getNameTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NameOperator
ruleNameOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameOperatorAccess().getAlternatives()); }
		(rule__NameOperator__Alternatives)
		{ after(grammarAccess.getNameOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Language
ruleLanguage
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getAlternatives()); }
		(rule__Language__Alternatives)
		{ after(grammarAccess.getLanguageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AccessModifier
ruleAccessModifier
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessModifierAccess().getAlternatives()); }
		(rule__AccessModifier__Alternatives)
		{ after(grammarAccess.getAccessModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpAssignment_0()); }
		(rule__Or__OpAssignment_0)
		{ after(grammarAccess.getOrAccess().getOpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrAccess().getGroup_1()); }
		(rule__Or__Group_1__0)
		{ after(grammarAccess.getOrAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Satisfy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSatisfyAccess().getIsInheritorParserRuleCall_0()); }
		ruleIsInheritor
		{ after(grammarAccess.getSatisfyAccess().getIsInheritorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getImplementsParserRuleCall_1()); }
		ruleImplements
		{ after(grammarAccess.getSatisfyAccess().getImplementsParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getIsExtendedParserRuleCall_2()); }
		ruleIsExtended
		{ after(grammarAccess.getSatisfyAccess().getIsExtendedParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getHaveConstantParserRuleCall_3()); }
		ruleHaveConstant
		{ after(grammarAccess.getSatisfyAccess().getHaveConstantParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getVariableParserRuleCall_4()); }
		ruleVariable
		{ after(grammarAccess.getSatisfyAccess().getVariableParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getParametreParserRuleCall_5()); }
		ruleParametre
		{ after(grammarAccess.getSatisfyAccess().getParametreParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getConstructorParserRuleCall_6()); }
		ruleConstructor
		{ after(grammarAccess.getSatisfyAccess().getConstructorParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getReturnParserRuleCall_7()); }
		ruleReturn
		{ after(grammarAccess.getSatisfyAccess().getReturnParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getAttributeTypeParserRuleCall_8()); }
		ruleAttributeType
		{ after(grammarAccess.getSatisfyAccess().getAttributeTypeParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getInitializeParserRuleCall_9()); }
		ruleInitialize
		{ after(grammarAccess.getSatisfyAccess().getInitializeParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getNoEmptyParserRuleCall_10()); }
		ruleNoEmpty
		{ after(grammarAccess.getSatisfyAccess().getNoEmptyParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getNameParserRuleCall_11()); }
		ruleName
		{ after(grammarAccess.getSatisfyAccess().getNameParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getJavaDocParserRuleCall_12()); }
		ruleJavaDoc
		{ after(grammarAccess.getSatisfyAccess().getJavaDocParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getConteinsParserRuleCall_13()); }
		ruleConteins
		{ after(grammarAccess.getSatisfyAccess().getConteinsParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getSatisfyAccess().getModifiersParserRuleCall_14()); }
		ruleModifiers
		{ after(grammarAccess.getSatisfyAccess().getModifiersParserRuleCall_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_0()); }
		(rule__Variable__Group_1_0__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_1_1()); }
		(rule__Variable__Group_1_1__0)
		{ after(grammarAccess.getVariableAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getGroup_0()); }
		(rule__Name__Group_0__0)
		{ after(grammarAccess.getNameAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameAccess().getGroup_1()); }
		(rule__Name__Group_1__0)
		{ after(grammarAccess.getNameAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_0()); }
		(rule__BlendModifiers__Group_0__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_1()); }
		(rule__BlendModifiers__Group_1__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_2()); }
		(rule__BlendModifiers__Group_2__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getGroup_3()); }
		(rule__BlendModifiers__Group_3__0)
		{ after(grammarAccess.getBlendModifiersAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_4()); }
		(rule__BlendModifiers__SynchronizedAssignment_4)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getCheckEnumLiteralDeclaration_0()); }
		('check')
		{ after(grammarAccess.getActionAccess().getCheckEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getCorrectEnumLiteralDeclaration_1()); }
		('correct')
		{ after(grammarAccess.getActionAccess().getCorrectEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_0()); }
		('one')
		{ after(grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_1()); }
		('exists')
		{ after(grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_2()); }
		('all')
		{ after(grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementJava__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementJavaAccess().getPackageEnumLiteralDeclaration_0()); }
		('package')
		{ after(grammarAccess.getElementJavaAccess().getPackageEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getClassEnumLiteralDeclaration_1()); }
		('class')
		{ after(grammarAccess.getElementJavaAccess().getClassEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getInterfaceEnumLiteralDeclaration_2()); }
		('interface')
		{ after(grammarAccess.getElementJavaAccess().getInterfaceEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getEnumEnumLiteralDeclaration_3()); }
		('enum')
		{ after(grammarAccess.getElementJavaAccess().getEnumEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getMethodEnumLiteralDeclaration_4()); }
		('method')
		{ after(grammarAccess.getElementJavaAccess().getMethodEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementJavaAccess().getAttributeEnumLiteralDeclaration_5()); }
		('attribute')
		{ after(grammarAccess.getElementJavaAccess().getAttributeEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameTypeAccess().getUpperCaseEnumLiteralDeclaration_0()); }
		('upperCase')
		{ after(grammarAccess.getNameTypeAccess().getUpperCaseEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getLowerCaseEnumLiteralDeclaration_1()); }
		('lowerCase')
		{ after(grammarAccess.getNameTypeAccess().getLowerCaseEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getUpperCamelCaseEnumLiteralDeclaration_2()); }
		('upperCamelCase')
		{ after(grammarAccess.getNameTypeAccess().getUpperCamelCaseEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getLowerCamelCaseEnumLiteralDeclaration_3()); }
		('lowerCamelCase')
		{ after(grammarAccess.getNameTypeAccess().getLowerCamelCaseEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getNameTypeAccess().getStartUpperCaseEnumLiteralDeclaration_4()); }
		('startUpperCase')
		{ after(grammarAccess.getNameTypeAccess().getStartUpperCaseEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameOperatorAccess().getLikeEnumLiteralDeclaration_0()); }
		('like')
		{ after(grammarAccess.getNameOperatorAccess().getLikeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameOperatorAccess().getEqualEnumLiteralDeclaration_1()); }
		('equal')
		{ after(grammarAccess.getNameOperatorAccess().getEqualEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Language__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_0()); }
		('English')
		{ after(grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLanguageAccess().getESPANIOLEnumLiteralDeclaration_1()); }
		('Spanish')
		{ after(grammarAccess.getLanguageAccess().getESPANIOLEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAccessModifierAccess().getPublicEnumLiteralDeclaration_0()); }
		('Public')
		{ after(grammarAccess.getAccessModifierAccess().getPublicEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAccessModifierAccess().getProtectedEnumLiteralDeclaration_1()); }
		('Protected')
		{ after(grammarAccess.getAccessModifierAccess().getProtectedEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAccessModifierAccess().getPrivateEnumLiteralDeclaration_2()); }
		('Private')
		{ after(grammarAccess.getAccessModifierAccess().getPrivateEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__0__Impl
	rule__RuleSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getGroup_0()); }
	(rule__RuleSet__Group_0__0)?
	{ after(grammarAccess.getRuleSetAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__1__Impl
	rule__RuleSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulesAssignment_1()); }
	(rule__RuleSet__RulesAssignment_1)
	{ after(grammarAccess.getRuleSetAccess().getRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getRulesAssignment_2()); }
	(rule__RuleSet__RulesAssignment_2)*
	{ after(grammarAccess.getRuleSetAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_0__0__Impl
	rule__RuleSet__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getProjectNameKeyword_0_0()); }
	'Project Name:'
	{ after(grammarAccess.getRuleSetAccess().getProjectNameKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleSet__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleSetAccess().getProjectNameAssignment_0_1()); }
	(rule__RuleSet__ProjectNameAssignment_0_1)
	{ after(grammarAccess.getRuleSetAccess().getProjectNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getActionAssignment_0()); }
	(rule__Rule__ActionAssignment_0)
	{ after(grammarAccess.getRuleAccess().getActionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getOnAssignment_1()); }
	(rule__Rule__OnAssignment_1)
	{ after(grammarAccess.getRuleAccess().getOnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Testing__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testing__Group__0__Impl
	rule__Testing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestingAccess().getNoAssignment_0()); }
	(rule__Testing__NoAssignment_0)?
	{ after(grammarAccess.getTestingAccess().getNoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testing__Group__1__Impl
	rule__Testing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestingAccess().getQuantifierAssignment_1()); }
	(rule__Testing__QuantifierAssignment_1)
	{ after(grammarAccess.getTestingAccess().getQuantifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testing__Group__2__Impl
	rule__Testing__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestingAccess().getElementAssignment_2()); }
	(rule__Testing__ElementAssignment_2)
	{ after(grammarAccess.getTestingAccess().getElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testing__Group__3__Impl
	rule__Testing__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestingAccess().getSatisfyKeyword_3()); }
	'satisfy'
	{ after(grammarAccess.getTestingAccess().getSatisfyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testing__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestingAccess().getSatisfyAssignment_4()); }
	(rule__Testing__SatisfyAssignment_4)
	{ after(grammarAccess.getTestingAccess().getSatisfyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getElementAssignment_0()); }
	(rule__Element__ElementAssignment_0)
	{ after(grammarAccess.getElementAccess().getElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_1()); }
	(rule__Element__Group_1__0)?
	{ after(grammarAccess.getElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__0__Impl
	rule__Element__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWhichKeyword_1_0()); }
	'which'
	{ after(grammarAccess.getElementAccess().getWhichKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getFilterAssignment_1_1()); }
	(rule__Element__FilterAssignment_1_1)
	{ after(grammarAccess.getElementAccess().getFilterAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
	(rule__Or__OpAssignment_1_1)
	{ after(grammarAccess.getOrAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
	rule__Or__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getOrAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOrAccess().getGroup_1_3()); }
		(rule__Or__Group_1_3__0)
		{ after(grammarAccess.getOrAccess().getGroup_1_3()); }
	)
	(
		{ before(grammarAccess.getOrAccess().getGroup_1_3()); }
		(rule__Or__Group_1_3__0)*
		{ after(grammarAccess.getOrAccess().getGroup_1_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1_3__0__Impl
	rule__Or__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrKeyword_1_3_0()); }
	'or'
	{ after(grammarAccess.getOrAccess().getOrKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1_3__1__Impl
	rule__Or__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1_3_1()); }
	'('
	{ after(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1_3__2__Impl
	rule__Or__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOpAssignment_1_3_2()); }
	(rule__Or__OpAssignment_1_3_2)
	{ after(grammarAccess.getOrAccess().getOpAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightParenthesisKeyword_1_3_3()); }
	')'
	{ after(grammarAccess.getOrAccess().getRightParenthesisKeyword_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_0()); }
	(rule__And__OpAssignment_0)
	{ after(grammarAccess.getAndAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getAndAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
	(rule__And__OpAssignment_1_1)
	{ after(grammarAccess.getAndAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsInheritor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group__0__Impl
	rule__IsInheritor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getIsInheritorAction_0()); }
	()
	{ after(grammarAccess.getIsInheritorAccess().getIsInheritorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group__1__Impl
	rule__IsInheritor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getIsInheritorKeyword_1()); }
	'is inheritor'
	{ after(grammarAccess.getIsInheritorAccess().getIsInheritorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getGroup_2()); }
	(rule__IsInheritor__Group_2__0)?
	{ after(grammarAccess.getIsInheritorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IsInheritor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group_2__0__Impl
	rule__IsInheritor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getMaxLevelKeyword_2_0()); }
	'max level='
	{ after(grammarAccess.getIsInheritorAccess().getMaxLevelKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IsInheritor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIsInheritorAccess().getMaxLevelAssignment_2_1()); }
	(rule__IsInheritor__MaxLevelAssignment_2_1)
	{ after(grammarAccess.getIsInheritorAccess().getMaxLevelAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__0__Impl
	rule__Implements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getImplementsAction_0()); }
	()
	{ after(grammarAccess.getImplementsAccess().getImplementsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__1__Impl
	rule__Implements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getImplementsInterfaceKeyword_1()); }
	'implements interface'
	{ after(grammarAccess.getImplementsAccess().getImplementsInterfaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getGroup_2()); }
	(rule__Implements__Group_2__0)?
	{ after(grammarAccess.getImplementsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Implements__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2__0__Impl
	rule__Implements__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMaxInterfaceKeyword_2_0()); }
	'max interface='
	{ after(grammarAccess.getImplementsAccess().getMaxInterfaceKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Implements__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplementsAccess().getMaxInterfaceAssignment_2_1()); }
	(rule__Implements__MaxInterfaceAssignment_2_1)
	{ after(grammarAccess.getImplementsAccess().getMaxInterfaceAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HaveConstant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HaveConstant__Group__0__Impl
	rule__HaveConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HaveConstant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHaveConstantAccess().getHaveConstantAction_0()); }
	()
	{ after(grammarAccess.getHaveConstantAccess().getHaveConstantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HaveConstant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HaveConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HaveConstant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHaveConstantAccess().getUseConstantKeyword_1()); }
	'use constant'
	{ after(grammarAccess.getHaveConstantAccess().getUseConstantKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariablesKeyword_0()); }
	'variables'
	{ after(grammarAccess.getVariableAccess().getVariablesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_1()); }
	(rule__Variable__Alternatives_1)
	{ after(grammarAccess.getVariableAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__0__Impl
	rule__Variable__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPositionAssignment_1_0_0()); }
	(rule__Variable__PositionAssignment_1_0_0)
	{ after(grammarAccess.getVariableAccess().getPositionAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_1_0_1()); }
	(rule__Variable__Group_1_0_1__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0_1__0__Impl
	rule__Variable__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAndKeyword_1_0_1_0()); }
	'and '
	{ after(grammarAccess.getVariableAccess().getAndKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getInitializeAssignment_1_0_1_1()); }
	(rule__Variable__InitializeAssignment_1_0_1_1)
	{ after(grammarAccess.getVariableAccess().getInitializeAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__0__Impl
	rule__Variable__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getInitializeAssignment_1_1_0()); }
	(rule__Variable__InitializeAssignment_1_1_0)
	{ after(grammarAccess.getVariableAccess().getInitializeAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_1_1_1()); }
	(rule__Variable__Group_1_1_1__0)?
	{ after(grammarAccess.getVariableAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1_1__0__Impl
	rule__Variable__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAndKeyword_1_1_1_0()); }
	'and '
	{ after(grammarAccess.getVariableAccess().getAndKeyword_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPositionAssignment_1_1_1_1()); }
	(rule__Variable__PositionAssignment_1_1_1_1)
	{ after(grammarAccess.getVariableAccess().getPositionAssignment_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parametre__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__0__Impl
	rule__Parametre__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getParametreAction_0()); }
	()
	{ after(grammarAccess.getParametreAccess().getParametreAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__1__Impl
	rule__Parametre__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getNumberOfParametersKeyword_1()); }
	'number of parameters ='
	{ after(grammarAccess.getParametreAccess().getNumberOfParametersKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__2__Impl
	rule__Parametre__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getNumParamAssignment_2()); }
	(rule__Parametre__NumParamAssignment_2)
	{ after(grammarAccess.getParametreAccess().getNumParamAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getGroup_3()); }
	(rule__Parametre__Group_3__0)?
	{ after(grammarAccess.getParametreAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parametre__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group_3__0__Impl
	rule__Parametre__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getAndTypesKeyword_3_0()); }
	'and types='
	{ after(grammarAccess.getParametreAccess().getAndTypesKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group_3__1__Impl
	rule__Parametre__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getTypesParamAssignment_3_1()); }
	(rule__Parametre__TypesParamAssignment_3_1)
	{ after(grammarAccess.getParametreAccess().getTypesParamAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getGroup_3_2()); }
	(rule__Parametre__Group_3_2__0)*
	{ after(grammarAccess.getParametreAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parametre__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group_3_2__0__Impl
	rule__Parametre__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getParametreAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parametre__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametreAccess().getTypesParamAssignment_3_2_1()); }
	(rule__Parametre__TypesParamAssignment_3_2_1)
	{ after(grammarAccess.getParametreAccess().getTypesParamAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getConstructorAction_0()); }
	()
	{ after(grammarAccess.getConstructorAccess().getConstructorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constructor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorAccess().getIsConstructorKeyword_1()); }
	'is constructor'
	{ after(grammarAccess.getConstructorAccess().getIsConstructorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__0__Impl
	rule__Return__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getReturnTypeKeyword_0()); }
	'return type='
	{ after(grammarAccess.getReturnAccess().getReturnTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Return__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnAccess().getReturnTypeAssignment_1()); }
	(rule__Return__ReturnTypeAssignment_1)
	{ after(grammarAccess.getReturnAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__0__Impl
	rule__AttributeType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }
	'attribute type='
	{ after(grammarAccess.getAttributeTypeAccess().getAttributeTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeTypeAccess().getTypeAssignment_1()); }
	(rule__AttributeType__TypeAssignment_1)
	{ after(grammarAccess.getAttributeTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initialize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__0__Impl
	rule__Initialize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getInitializeAction_0()); }
	()
	{ after(grammarAccess.getInitializeAccess().getInitializeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialize__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializeAccess().getIsInitializedKeyword_1()); }
	'is initialized'
	{ after(grammarAccess.getInitializeAccess().getIsInitializedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NoEmpty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoEmpty__Group__0__Impl
	rule__NoEmpty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoEmptyAccess().getNoEmptyAction_0()); }
	()
	{ after(grammarAccess.getNoEmptyAccess().getNoEmptyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoEmpty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoEmpty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoEmptyAccess().getNoEmptyKeyword_1()); }
	'no empty'
	{ after(grammarAccess.getNoEmptyAccess().getNoEmptyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0__0__Impl
	rule__Name__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeNameKeyword_0_0()); }
	'type name ='
	{ after(grammarAccess.getNameAccess().getTypeNameKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0__1__Impl
	rule__Name__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeAssignment_0_1()); }
	(rule__Name__TypeAssignment_0_1)
	{ after(grammarAccess.getNameAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_0_2()); }
	(rule__Name__Group_0_2__0)?
	{ after(grammarAccess.getNameAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0_2__0__Impl
	rule__Name__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getAndNameKeyword_0_2_0()); }
	'and name '
	{ after(grammarAccess.getNameAccess().getAndNameKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0_2__1__Impl
	rule__Name__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getOperatorAssignment_0_2_1()); }
	(rule__Name__OperatorAssignment_0_2_1)
	{ after(grammarAccess.getNameAccess().getOperatorAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0_2__2__Impl
	rule__Name__Group_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAssignment_0_2_2()); }
	(rule__Name__NameAssignment_0_2_2)
	{ after(grammarAccess.getNameAccess().getNameAssignment_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_0_2_3()); }
	(rule__Name__Group_0_2_3__0)?
	{ after(grammarAccess.getNameAccess().getGroup_0_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_0_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0_2_3__0__Impl
	rule__Name__Group_0_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getInKeyword_0_2_3_0()); }
	'in'
	{ after(grammarAccess.getNameAccess().getInKeyword_0_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getLanguageAssignment_0_2_3_1()); }
	(rule__Name__LanguageAssignment_0_2_3_1)
	{ after(grammarAccess.getNameAccess().getLanguageAssignment_0_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1__0__Impl
	rule__Name__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameKeyword_1_0()); }
	'name '
	{ after(grammarAccess.getNameAccess().getNameKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1__1__Impl
	rule__Name__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getOperatorAssignment_1_1()); }
	(rule__Name__OperatorAssignment_1_1)
	{ after(grammarAccess.getNameAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1__2__Impl
	rule__Name__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getNameAssignment_1_2()); }
	(rule__Name__NameAssignment_1_2)
	{ after(grammarAccess.getNameAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1__3__Impl
	rule__Name__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_1_3()); }
	(rule__Name__Group_1_3__0)?
	{ after(grammarAccess.getNameAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_1_4()); }
	(rule__Name__Group_1_4__0)?
	{ after(grammarAccess.getNameAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1_3__0__Impl
	rule__Name__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getInKeyword_1_3_0()); }
	'in'
	{ after(grammarAccess.getNameAccess().getInKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getLanguageAssignment_1_3_1()); }
	(rule__Name__LanguageAssignment_1_3_1)
	{ after(grammarAccess.getNameAccess().getLanguageAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1_4__0__Impl
	rule__Name__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getAndTypeNameKeyword_1_4_0()); }
	'and type name ='
	{ after(grammarAccess.getNameAccess().getAndTypeNameKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getTypeAssignment_1_4_1()); }
	(rule__Name__TypeAssignment_1_4_1)
	{ after(grammarAccess.getNameAccess().getTypeAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaDoc__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__0__Impl
	rule__JavaDoc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getJavaDocAction_0()); }
	()
	{ after(grammarAccess.getJavaDocAccess().getJavaDocAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__1__Impl
	rule__JavaDoc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getJavaDocKeyword_1()); }
	'JavaDoc'
	{ after(grammarAccess.getJavaDocAccess().getJavaDocKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__2__Impl
	rule__JavaDoc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getAuthorAssignment_2()); }
	(rule__JavaDoc__AuthorAssignment_2)?
	{ after(grammarAccess.getJavaDocAccess().getAuthorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__3__Impl
	rule__JavaDoc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getParametreAssignment_3()); }
	(rule__JavaDoc__ParametreAssignment_3)?
	{ after(grammarAccess.getJavaDocAccess().getParametreAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__4__Impl
	rule__JavaDoc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getReturnAssignment_4()); }
	(rule__JavaDoc__ReturnAssignment_4)?
	{ after(grammarAccess.getJavaDocAccess().getReturnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__5__Impl
	rule__JavaDoc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getVersionAssignment_5()); }
	(rule__JavaDoc__VersionAssignment_5)?
	{ after(grammarAccess.getJavaDocAccess().getVersionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__6__Impl
	rule__JavaDoc__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getThrowsAssignment_6()); }
	(rule__JavaDoc__ThrowsAssignment_6)?
	{ after(grammarAccess.getJavaDocAccess().getThrowsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaDoc__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaDocAccess().getSeeAssignment_7()); }
	(rule__JavaDoc__SeeAssignment_7)?
	{ after(grammarAccess.getJavaDocAccess().getSeeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conteins__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conteins__Group__0__Impl
	rule__Conteins__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConteinsAccess().getHaveKeyword_0()); }
	'have'
	{ after(grammarAccess.getConteinsAccess().getHaveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conteins__Group__1__Impl
	rule__Conteins__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConteinsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getConteinsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conteins__Group__2__Impl
	rule__Conteins__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConteinsAccess().getWhichAssignment_2()); }
	(rule__Conteins__WhichAssignment_2)
	{ after(grammarAccess.getConteinsAccess().getWhichAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conteins__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConteinsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getConteinsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifiers__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__0__Impl
	rule__Modifiers__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getModifiersKeyword_0()); }
	'modifiers: '
	{ after(grammarAccess.getModifiersAccess().getModifiersKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__1__Impl
	rule__Modifiers__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__2__Impl
	rule__Modifiers__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getBlendAssignment_2()); }
	(rule__Modifiers__BlendAssignment_2)
	{ after(grammarAccess.getModifiersAccess().getBlendAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__3__Impl
	rule__Modifiers__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getGroup_4()); }
	(rule__Modifiers__Group_4__0)*
	{ after(grammarAccess.getModifiersAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modifiers__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_4__0__Impl
	rule__Modifiers__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getOrKeyword_4_0()); }
	'or'
	{ after(grammarAccess.getModifiersAccess().getOrKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_4__1__Impl
	rule__Modifiers__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getModifiersAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_4__2__Impl
	rule__Modifiers__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getBlendAssignment_4_2()); }
	(rule__Modifiers__BlendAssignment_4_2)
	{ after(grammarAccess.getModifiersAccess().getBlendAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modifiers__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getModifiersAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__0__Impl
	rule__BlendModifiers__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAccessAssignment_0_0()); }
	(rule__BlendModifiers__AccessAssignment_0_0)
	{ after(grammarAccess.getBlendModifiersAccess().getAccessAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__1__Impl
	rule__BlendModifiers__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getStaticAssignment_0_1()); }
	(rule__BlendModifiers__StaticAssignment_0_1)?
	{ after(grammarAccess.getBlendModifiersAccess().getStaticAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__2__Impl
	rule__BlendModifiers__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getFinalAssignment_0_2()); }
	(rule__BlendModifiers__FinalAssignment_0_2)?
	{ after(grammarAccess.getBlendModifiersAccess().getFinalAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__3__Impl
	rule__BlendModifiers__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_0_3()); }
	(rule__BlendModifiers__AbstractAssignment_0_3)?
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_0_4()); }
	(rule__BlendModifiers__SynchronizedAssignment_0_4)?
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__0__Impl
	rule__BlendModifiers__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getStaticAssignment_1_0()); }
	(rule__BlendModifiers__StaticAssignment_1_0)
	{ after(grammarAccess.getBlendModifiersAccess().getStaticAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__1__Impl
	rule__BlendModifiers__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getFinalAssignment_1_1()); }
	(rule__BlendModifiers__FinalAssignment_1_1)?
	{ after(grammarAccess.getBlendModifiersAccess().getFinalAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__2__Impl
	rule__BlendModifiers__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_1_2()); }
	(rule__BlendModifiers__AbstractAssignment_1_2)?
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_1_3()); }
	(rule__BlendModifiers__SynchronizedAssignment_1_3)?
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2__0__Impl
	rule__BlendModifiers__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getFinalAssignment_2_0()); }
	(rule__BlendModifiers__FinalAssignment_2_0)
	{ after(grammarAccess.getBlendModifiersAccess().getFinalAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2__1__Impl
	rule__BlendModifiers__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_2_1()); }
	(rule__BlendModifiers__AbstractAssignment_2_1)?
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_2_2()); }
	(rule__BlendModifiers__SynchronizedAssignment_2_2)?
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlendModifiers__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_3__0__Impl
	rule__BlendModifiers__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_3_0()); }
	(rule__BlendModifiers__AbstractAssignment_3_0)
	{ after(grammarAccess.getBlendModifiersAccess().getAbstractAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlendModifiers__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_3_1()); }
	(rule__BlendModifiers__SynchronizedAssignment_3_1)?
	{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EBigInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBigInteger__Group__0__Impl
	rule__EBigInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EBigInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBigIntegerAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEBigIntegerAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBigInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EBigInteger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EBigInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEBigIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEBigIntegerAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleSet__ProjectNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getProjectNameEStringParserRuleCall_0_1_0()); }
		ruleEString
		{ after(grammarAccess.getRuleSetAccess().getProjectNameEStringParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleSet__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getRuleSetAccess().getRulesRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getActionActionEnumRuleCall_0_0()); }
		ruleAction
		{ after(grammarAccess.getRuleAccess().getActionActionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__OnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getOnTestingParserRuleCall_1_0()); }
		ruleTesting
		{ after(grammarAccess.getRuleAccess().getOnTestingParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__NoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestingAccess().getNoNoKeyword_0_0()); }
		(
			{ before(grammarAccess.getTestingAccess().getNoNoKeyword_0_0()); }
			'no'
			{ after(grammarAccess.getTestingAccess().getNoNoKeyword_0_0()); }
		)
		{ after(grammarAccess.getTestingAccess().getNoNoKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__QuantifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestingAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
		ruleQuantifier
		{ after(grammarAccess.getTestingAccess().getQuantifierQuantifierEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__ElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestingAccess().getElementElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getTestingAccess().getElementElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testing__SatisfyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestingAccess().getSatisfyOrParserRuleCall_4_0()); }
		ruleOr
		{ after(grammarAccess.getTestingAccess().getSatisfyOrParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__ElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getElementElementJavaEnumRuleCall_0_0()); }
		ruleElementJava
		{ after(grammarAccess.getElementAccess().getElementElementJavaEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__FilterAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getFilterOrParserRuleCall_1_1_0()); }
		ruleOr
		{ after(grammarAccess.getElementAccess().getFilterOrParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpAndParserRuleCall_0_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getOpAndParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_1_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__OpAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_3_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_0_0()); }
		ruleSatisfy
		{ after(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_1_0()); }
		ruleSatisfy
		{ after(grammarAccess.getAndAccess().getOpSatisfyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsInheritor__MaxLevelAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsInheritorAccess().getMaxLevelEBigIntegerParserRuleCall_2_1_0()); }
		ruleEBigInteger
		{ after(grammarAccess.getIsInheritorAccess().getMaxLevelEBigIntegerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Implements__MaxInterfaceAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplementsAccess().getMaxInterfaceEBigIntegerParserRuleCall_2_1_0()); }
		ruleEBigInteger
		{ after(grammarAccess.getImplementsAccess().getMaxInterfaceEBigIntegerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IsExtended__IsExtendsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIsExtendedAccess().getIsExtendsIsExtendsKeyword_0()); }
		(
			{ before(grammarAccess.getIsExtendedAccess().getIsExtendsIsExtendsKeyword_0()); }
			'is extends'
			{ after(grammarAccess.getIsExtendedAccess().getIsExtendsIsExtendsKeyword_0()); }
		)
		{ after(grammarAccess.getIsExtendedAccess().getIsExtendsIsExtendsKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PositionAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_0_0_0()); }
			'right position'
			{ after(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitializeAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_0_1_1_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_0_1_1_0()); }
			'initialized'
			{ after(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_0_1_1_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitializeAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_1_0_0()); }
			'initialized'
			{ after(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getInitializeInitializedKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__PositionAssignment_1_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_1_1_1_0()); }
		(
			{ before(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_1_1_1_0()); }
			'right position'
			{ after(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_1_1_1_0()); }
		)
		{ after(grammarAccess.getVariableAccess().getPositionRightPositionKeyword_1_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__NumParamAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametreAccess().getNumParamEBigIntegerParserRuleCall_2_0()); }
		ruleEBigInteger
		{ after(grammarAccess.getParametreAccess().getNumParamEBigIntegerParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__TypesParamAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametreAccess().getTypesParamEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getParametreAccess().getTypesParamEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parametre__TypesParamAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametreAccess().getTypesParamEStringParserRuleCall_3_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getParametreAccess().getTypesParamEStringParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnAccess().getReturnTypeEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getReturnAccess().getReturnTypeEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getTypeEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getAttributeTypeAccess().getTypeEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_0_1_0()); }
		ruleNameType
		{ after(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__OperatorAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_0_2_1_0()); }
		ruleNameOperator
		{ after(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_0_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameEStringParserRuleCall_0_2_2_0()); }
		ruleEString
		{ after(grammarAccess.getNameAccess().getNameEStringParserRuleCall_0_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__LanguageAssignment_0_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_0_2_3_1_0()); }
		ruleLanguage
		{ after(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_0_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_1_1_0()); }
		ruleNameOperator
		{ after(grammarAccess.getNameAccess().getOperatorNameOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getNameEStringParserRuleCall_1_2_0()); }
		ruleEString
		{ after(grammarAccess.getNameAccess().getNameEStringParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__LanguageAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_1_3_1_0()); }
		ruleLanguage
		{ after(grammarAccess.getNameAccess().getLanguageLanguageEnumRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__TypeAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_1_4_1_0()); }
		ruleNameType
		{ after(grammarAccess.getNameAccess().getTypeNameTypeEnumRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__AuthorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
			'@author'
			{ after(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__ParametreAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getParametreParameterKeyword_3_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getParametreParameterKeyword_3_0()); }
			'@parameter'
			{ after(grammarAccess.getJavaDocAccess().getParametreParameterKeyword_3_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getParametreParameterKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__ReturnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
			'@return'
			{ after(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getReturnReturnKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__VersionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
			'@version'
			{ after(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getVersionVersionKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__ThrowsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
			'@throws'
			{ after(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaDoc__SeeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
		(
			{ before(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
			'@see'
			{ after(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
		)
		{ after(grammarAccess.getJavaDocAccess().getSeeSeeKeyword_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conteins__WhichAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConteinsAccess().getWhichTestingParserRuleCall_2_0()); }
		ruleTesting
		{ after(grammarAccess.getConteinsAccess().getWhichTestingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__BlendAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_2_0()); }
		ruleBlendModifiers
		{ after(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifiers__BlendAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_4_2_0()); }
		ruleBlendModifiers
		{ after(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AccessAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAccessAccessModifierEnumRuleCall_0_0_0()); }
		ruleAccessModifier
		{ after(grammarAccess.getBlendModifiersAccess().getAccessAccessModifierEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__StaticAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getStaticAndStaticKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getStaticAndStaticKeyword_0_1_0()); }
			'and static'
			{ after(grammarAccess.getBlendModifiersAccess().getStaticAndStaticKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getStaticAndStaticKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__FinalAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_0_2_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_0_2_0()); }
			'and final'
			{ after(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_0_2_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_0_3_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_0_3_0()); }
			'and abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_0_3_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_0_4_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_0_4_0()); }
			'and synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_0_4_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__StaticAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
			'static'
			{ after(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__FinalAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_1_1_0()); }
			'and final'
			{ after(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getFinalAndFinalKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_1_2_0()); }
			'and abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_1_3_0()); }
			'and synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__FinalAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
			'final'
			{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_2_1_0()); }
			'and abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAndAbstractKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_2_2_0()); }
			'and synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__AbstractAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
			'abstract'
			{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_3_1_0()); }
			'and synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedAndSynchronizedKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlendModifiers__SynchronizedAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
		(
			{ before(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
			'synchronized'
			{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
		)
		{ after(grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
